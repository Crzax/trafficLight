C51 COMPILER V9.60.7.0   IR                                                                10/31/2024 12:54:51 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Developer\Keil_5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\IR.lst) OBJECT(.\Objects\IR.obj)

line level    source

   1          /**************************************************
   2           * Author:       ÈôàÈúáÈõÑ
   3           * Date:         2024-10-31
   4           * Description:  Á∫¢Â§ñÈÅ•ÊéßÂô®Áõ∏ÂÖ≥
   5           **************************************************/
   6          
   7          #include <REGX52.H>
   8          #include "Timer.h"
   9          #include "Int0.h"
  10          #include "IR.h"
  11          #include "TrafficLight.h"
  12          unsigned int IR_Time;
  13          unsigned char IR_State;
  14          
  15          unsigned char IR_Data[4];
  16          unsigned char IR_pData;
  17          
  18          unsigned char IR_DataFlag;  
  19          unsigned char IR_RepeatFlag;
  20          unsigned char IR_Address;
  21          unsigned char IR_Command;
  22          
  23          /**
  24            * @brief  ÈÅ•ÊéßÂô®ÂàùÂßãÂåñ
  25            * @param  Êó†
  26            * @retval Êó†
  27            */
  28          void IR_Init(void)
  29          {
  30   1              Timer2_Init();
  31   1              Int0_Init();
  32   1      }
  33          
  34          /**
  35            * @brief  Ëé∑Âèñdata‰ΩçÔºåÂà§Êñ≠ÊòØÂê¶ÊãøÂà∞‰∫ÜÊï∞ÊçÆ
  36            * @param  Êó†
  37            * @retval dataFlag
  38            */
  39          unsigned char IR_GetDataFlag(void)
  40          {
  41   1              if(IR_DataFlag)
  42   1              {
  43   2                      IR_DataFlag=0;
  44   2                      return 1;
  45   2              }
  46   1              return 0;
  47   1      }
  48          
  49          /**
  50            * @brief  Á∫¢Â§ñÈÅ•ÊéßËé∑ÂèñÊî∂Âà∞ËøûÂèëÂ∏ßÊ†áÂøó‰Ωç
  51            * @param  Êó†
  52            * @retval ÊòØÂê¶Êî∂Âà∞ËøûÂèëÂ∏ßÔºå1‰∏∫Êî∂Âà∞Ôºå0‰∏∫Êú™Êî∂Âà∞
  53            */
  54          unsigned char IR_GetRepeatFlag(void)
C51 COMPILER V9.60.7.0   IR                                                                10/31/2024 12:54:51 PAGE 2   

  55          {
  56   1              if(IR_RepeatFlag)
  57   1              {
  58   2                      IR_RepeatFlag=0;
  59   2                      return 1;
  60   2              }
  61   1              return 0;
  62   1      }
  63          
  64          /**
  65            * @brief  Á∫¢Â§ñÈÅ•ÊéßËé∑ÂèñÊî∂Âà∞ÁöÑÂú∞ÂùÄÊï∞ÊçÆ
  66            * @param  Êó†
  67            * @retval Êî∂Âà∞ÁöÑÂú∞ÂùÄÊï∞ÊçÆ
  68            */
  69          unsigned char IR_GetAddress(void)
  70          {
  71   1              return IR_Address;
  72   1      }
  73          
  74          /**
  75            * @brief  Á∫¢Â§ñÈÅ•ÊéßËé∑ÂèñÊî∂Âà∞ÁöÑÂëΩ‰ª§Êï∞ÊçÆ
  76            * @param  Êó†
  77            * @retval Êî∂Âà∞ÁöÑÂëΩ‰ª§Êï∞ÊçÆ
  78            */
  79          unsigned char IR_GetCommand(void)
  80          {
  81   1              return IR_Command;
  82   1      }
  83          
  84          /**
  85            * @brief  Ëé∑ÂèñÁõÆÂâçÁöÑCommandÊâÄÊåáÁöÑÊï∞Â≠ó/Êåá‰ª§
  86            * @param  Êó†
  87            * @retval ÂΩìÂâçCommandÂØπÂ∫îÁöÑÊï∞Â≠ó/Êåá‰ª§ÔºåÂ¶ÇÊûú‰∏çÊòØÂ∑≤ÁªèÂÆö‰πâÂê´‰πâÁöÑÊï∞Â≠ó/Êåá‰ª§ÔºåÈÇ£‰πàË
             -øîÂõûINVALID
  88                                  ÂêåÊó∂ËøîÂõûÂêéÁΩÆIR_Command‰∏∫0
  89            */
  90          unsigned char IR_GetNumber(void)
  91          {
  92   1              switch (IR_Command) {
  93   2                      case IR_0: IR_Command = 0; return 0;break;
  94   2                      case IR_1: IR_Command = 0; return 1;break;
  95   2                      case IR_2: IR_Command = 0; return 2;break;
  96   2                      case IR_3: IR_Command = 0; return 3;break;
  97   2                      case IR_4: IR_Command = 0; return 4;break;
  98   2                      case IR_5: IR_Command = 0; return 5;break;
  99   2                      case IR_6: IR_Command = 0; return 6;break;
 100   2                      case IR_7: IR_Command = 0; return 7;break;
 101   2                      case IR_8: IR_Command = 0; return 8;break;
 102   2                      case IR_9: IR_Command = 0; return 9;break;
 103   2                      case IR_VOL_ADD: IR_Command = 0; return ADDONE;break;
 104   2                      case IR_VOL_MINUS: IR_Command = 0; return SUBONE;break;
 105   2                      case IR_MUTE: IR_Command = 0; return CLEAR;break;
 106   2                      case IR_EQ: IR_Command = 0; return OK;break;
 107   2                      default: IR_Command = 0;return INVALID;
 108   2              }
 109   1      }
 110          
 111          /**
 112            * @brief  Â§ñÈÉ®‰∏≠Êñ≠0ÁöÑÂ§ÑÁêÜÂáΩÊï∞Ôºå‰πüÊòØÁ∫¢Â§ñÈÅ•ÊéßÂô®ÁöÑËß£Á†ÅÂáΩÊï∞Ôºå‰ΩøÁî®Áä∂ÊÄÅÊú∫ÁöÑÂéüÁêÜ
 113            * @param  Êó†
 114            * @retval Êó†
 115            */
C51 COMPILER V9.60.7.0   IR                                                                10/31/2024 12:54:51 PAGE 3   

 116          void Int0_Routine(void) interrupt 0
 117          {
 118   1              if (IR_State==0)
 119   1              {
 120   2                      Timer2_SetCounter(0);
 121   2                      Timer2_Run(1);
 122   2                      IR_State = 1;
 123   2              }
 124   1              else if(IR_State==1)            //Áä∂ÊÄÅ1ÔºåÁ≠âÂæÖStart‰ø°Âè∑ÊàñRepeat‰ø°Âè∑
 125   1              {
 126   2                      IR_Time=Timer2_GetCounter();    //Ëé∑Âèñ‰∏ä‰∏ÄÊ¨°‰∏≠Êñ≠Âà∞Ê≠§Ê¨°‰∏≠Êñ≠ÁöÑÊó∂Èó¥
 127   2                      Timer2_SetCounter(0);   //ÂÆöÊó∂ËÆ°Êï∞Âô®Ê∏Ö0
 128   2                      //Â¶ÇÊûúËÆ°Êó∂‰∏∫13.5msÔºåÂàôÊé•Êî∂Âà∞‰∫ÜStart‰ø°Âè∑ÔºàÂà§ÂÆöÂÄºÂú®12MHzÊô∂ÊåØ‰∏ã‰∏∫13500ÔºåÂú®11.0592MH
             -zÊô∂ÊåØ‰∏ã‰∏∫12442Ôºâ
 129   2                      if(IR_Time>12442-500 && IR_Time<12442+500)
 130   2                      {
 131   3                              IR_State=2;                     //ÁΩÆÁä∂ÊÄÅ‰∏∫2
 132   3                      }
 133   2                      //Â¶ÇÊûúËÆ°Êó∂‰∏∫11.25msÔºåÂàôÊé•Êî∂Âà∞‰∫ÜRepeat‰ø°Âè∑ÔºàÂà§ÂÆöÂÄºÂú®12MHzÊô∂ÊåØ‰∏ã‰∏∫11250ÔºåÂú®11.0592
             -MHzÊô∂ÊåØ‰∏ã‰∏∫10368Ôºâ
 134   2                      else if(IR_Time>10368-500 && IR_Time<10368+500)
 135   2                      {
 136   3                              IR_RepeatFlag=1;        //ÁΩÆÊî∂Âà∞ËøûÂèëÂ∏ßÊ†áÂøó‰Ωç‰∏∫1
 137   3                              Timer2_Run(0);          //ÂÆöÊó∂Âô®ÂÅúÊ≠¢
 138   3                              IR_State=0;                     //ÁΩÆÁä∂ÊÄÅ‰∏∫0
 139   3                      }
 140   2                      else                                    //Êé•Êî∂Âá∫Èîô
 141   2                      {
 142   3                              IR_State=1;                     //ÁΩÆÁä∂ÊÄÅ‰∏∫1
 143   3                      }
 144   2              }
 145   1              else if(IR_State==2)            //Áä∂ÊÄÅ2ÔºåÊé•Êî∂Êï∞ÊçÆ
 146   1              {
 147   2                      IR_Time=Timer2_GetCounter();    //Ëé∑Âèñ‰∏ä‰∏ÄÊ¨°‰∏≠Êñ≠Âà∞Ê≠§Ê¨°‰∏≠Êñ≠ÁöÑÊó∂Èó¥
 148   2                      Timer2_SetCounter(0);   //ÂÆöÊó∂ËÆ°Êï∞Âô®Ê∏Ö0
 149   2                      //Â¶ÇÊûúËÆ°Êó∂‰∏∫1120usÔºåÂàôÊé•Êî∂Âà∞‰∫ÜÊï∞ÊçÆ0ÔºàÂà§ÂÆöÂÄºÂú®12MHzÊô∂ÊåØ‰∏ã‰∏∫1120ÔºåÂú®11.0592MHzÊô∂Ê
             -åØ‰∏ã‰∏∫1032Ôºâ
 150   2                      if(IR_Time>1032-500 && IR_Time<1032+500)
 151   2                      {
 152   3                              IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8));     //Êï∞ÊçÆÂØπÂ∫î‰ΩçÊ∏Ö0
 153   3                              IR_pData++;                     //Êï∞ÊçÆ‰ΩçÁΩÆÊåáÈíàËá™Â¢û
 154   3                      }
 155   2                      //Â¶ÇÊûúËÆ°Êó∂‰∏∫2250usÔºåÂàôÊé•Êî∂Âà∞‰∫ÜÊï∞ÊçÆ1ÔºàÂà§ÂÆöÂÄºÂú®12MHzÊô∂ÊåØ‰∏ã‰∏∫2250ÔºåÂú®11.0592MHzÊô∂Ê
             -åØ‰∏ã‰∏∫2074Ôºâ
 156   2                      else if(IR_Time>2074-500 && IR_Time<2074+500)
 157   2                      {
 158   3                              IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));      //Êï∞ÊçÆÂØπÂ∫î‰ΩçÁΩÆ1
 159   3                              IR_pData++;                     //Êï∞ÊçÆ‰ΩçÁΩÆÊåáÈíàËá™Â¢û
 160   3                      }
 161   2                      else                                    //Êé•Êî∂Âá∫Èîô
 162   2                      {
 163   3                              IR_pData=0;                     //Êï∞ÊçÆ‰ΩçÁΩÆÊåáÈíàÊ∏Ö0
 164   3                              IR_State=1;                     //ÁΩÆÁä∂ÊÄÅ‰∏∫1
 165   3                      }
 166   2                      if(IR_pData>=32)                //Â¶ÇÊûúÊé•Êî∂Âà∞‰∫Ü32‰ΩçÊï∞ÊçÆ
 167   2                      {
 168   3                              IR_pData=0;                     //Êï∞ÊçÆ‰ΩçÁΩÆÊåáÈíàÊ∏Ö0
 169   3                              if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2]==~IR_Data[3]))      //Êï∞ÊçÆÈ™åËØÅ
 170   3                              {
 171   4                                      IR_Address=IR_Data[0];  //ËΩ¨Â≠òÊï∞ÊçÆ
 172   4                                      IR_Command=IR_Data[2];
 173   4                                      IR_DataFlag=1;  //ÁΩÆÊî∂Âà∞ËøûÂèëÂ∏ßÊ†áÂøó‰Ωç‰∏∫1
C51 COMPILER V9.60.7.0   IR                                                                10/31/2024 12:54:51 PAGE 4   

 174   4                              }
 175   3                              Timer2_Run(0);          //ÂÆöÊó∂Âô®ÂÅúÊ≠¢
 176   3                              IR_State=0;                     //ÁΩÆÁä∂ÊÄÅ‰∏∫0
 177   3                      }
 178   2              }
 179   1      }
 180          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    508    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
